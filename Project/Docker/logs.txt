Raccolta dei piant... tentativi e progressi fatti.

1. definizione della rete (vedi immagine sul tablet)
2. capire che versioni utilizzare di ubuntu
3. creazione dei container 
4. impostazione degli ip statici
5. PROBLEMA: non riusciamo ad impostare il routing corretto sui container
	i. proviamo uno script per cambiare il routing ma non ci sono i pacchetti necessari (manca il comando `ip` per modificare la route al gateway corretto)
	ii. decidiamo di utilizzare i Dockerfile, uno per ogni versione dal momento che i passaggi per cambiare il gateway sono diversi tra le varie versioni (banalmente cambia solo la riga con "FROM" per scaricare l'immagine di Ubuntu)
	iii. lo script non funziona su ubuntu 12.04, è troppo vecchio per fornire i pacchetti necessari a modificare il gateway (i Dockerfile delle altre versioni usano `apt-get` per scaricarsi "iproute2" e "net-tools", ma per la 12.04 non ci sono repository disponibili perché ha raggiunto la End-of-Life (i guess))
	iv. installiamo manualmente i pacchetti necessari scaricandoli da fonti più datate direttamente sul computer di Gabri, li copiamo nel container e li installiamo da lì
	v. buldiamo e facciamo cambiare il routing dal docker-compose (farlo dalla bild non funziona perchè non ha i permessi)
6. Ora funziona tutto, tutto builda e tutto passa per il router che è stato definito nel docker-compose (stonks!) ma che non fa routing correttamente (not stonks!)
7. Stiamo testando cosa utilizzare per poter configurare il router centrale dell'intera rete in modo che faccia da router tra le 4 subnets e l'internet.
   Abbiamo provato a utilizzare `iproute` e `bird` ma senza successo; ora tocca il turno di `frrouting`
8. Il problema sembra essere il NAT che non era abilitato. Abilitando il NAT-ting e modificando un po' il docker-compose in modo che non collida con le informazioni all'interno del Dockerfile di ogni container, siamo riusciti a far funzionare questi porcodio di router (e gli host, ma erano il male minore).
9. Abbiamo riflettuto sulla topologia attuale e abbiamo deciso di modificarla in maniera tale da permettere di effettuare test su subnet strutturate diversamente tra di loro. Per fare ciò abbiamo ideato e configurato la rete (nel branch `secondo-topology`) che è presente anche nell'immagine di riferimento (vedere immagine).
10. Ci sono problemi con i gateway e il router della rete principale (web): i vari host non riuscivano ad uscire verso internet in quanto non vedevano proprio il router principale. Questo è stato risolto aggiungendo al router principale un'interfaccia per ogni subnet presente. Ovviamente sono stati configurati i router delle subnet houseA e houseB in modo che possano far uscire gli host dentro le loro reti private verso internet. Da notare che la rete privata 192.168.1.0 non era utilizzabile siccome andava in conflitto con la nostra rete casalinga.
11. Abbiamo esposto le porte degli Ubuntu 12.04 della subnet corpA e houseB. È stato abilitato il port forwarding nel router di houseB per permettere al serverino web di poter essere visto dall'esterno. Abbiamo usato netcat per simulare un server web semplice e minimale, e che fosse sempre attivo oltre alla prima connessione (-k).
